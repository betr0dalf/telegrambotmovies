#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å Telegram-–±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤.

–ë–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:
- –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
- –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∂–∞–Ω—Ä—É
- –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –∑–∞ –≥–æ–¥
- –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ —Ä–µ–∂–∏—Å—Å–µ—Ä–∞
- –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –∞–∫—Ç–µ—Ä–∞
- –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å–º–µ

–î–ª—è —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è:
- API-—Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
- –§–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ñ–∏–ª—å–º–∞—Ö (MovieData.csv)
- –ú–æ–¥—É–ª—å background –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
"""

import telebot
from telebot import types
import pandas as pd
from background import keep_alive
import random
#  from telegram_bot.background import keep_alive


class MovieBot:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Telegram-–±–æ—Ç–æ–º –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤.

    Attributes:
        bot (telebot.TeleBot): –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
        movies (pd.DataFrame): –î–∞–Ω–Ω—ã–µ –æ —Ñ–∏–ª—å–º–∞—Ö
    """

    def __init__(self, token: str, data_file: str = 'MovieData.csv'):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞.

        :param token: API-—Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
        :type token: str
        :param data_file: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ñ–∏–ª—å–º–∞—Ö
        :type data_file: str
        """
        self.bot = telebot.TeleBot(token)
        self.load_movie_data(data_file)
        self.setup_handlers()

    def load_movie_data(self, data_file: str):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ñ–∏–ª—å–º–∞—Ö.

        :param data_file: –ü—É—Ç—å –∫ CSV —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏
        :type data_file: str
        """
        self.movies = pd.read_csv(data_file)
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        self.movies['ratingKP'] = pd.to_numeric(
            self.movies['ratingKP'], errors='coerce').fillna(0)
        self.movies['ratingImdb'] = pd.to_numeric(
            self.movies['ratingImdb'], errors='coerce').fillna(0)
        self.movies['Year'] = pd.to_numeric(
            self.movies['Year'], errors='coerce').fillna(0).astype(int)

    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞."""

        @self.bot.message_handler(commands=['start'])
        def start(message):
            self.show_main_menu(message)

        @self.bot.message_handler(func=lambda message: True)
        def handle_all_messages(message):
            self.on_click(message)

        @self.bot.callback_query_handler(func=lambda call: call.data.startswith('movie_'))
        def callback_movie_details(call):
            self.handle_movie_callback(call)

    def send_random_movie(self, message):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

        :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegram
        :type message: telebot.types.Message
        """
        movie = self.movies.sample(1).iloc[0]
        self.show_movie_details(message, movie)

    def recommend_by_genre(self, message):
        """
        –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É.

        :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∂–∞–Ω—Ä–æ–º
        :type message: telebot.types.Message

        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –∂–∞–Ω—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∑–∞—Ç–µ–º –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º
        —ç—Ç–æ–≥–æ –∂–∞–Ω—Ä–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –µ–≥–æ –¥–µ—Ç–∞–ª–∏. –ï—Å–ª–∏ –∂–∞–Ω—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Ñ–∏–ª—å–º—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç,
        –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
        """
        genre = message.text
        if genre not in self.movies['Genres'].apply(eval).explode().unique():
            self.bot.send_message(message.chat.id,
                                  '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.')
            self.show_main_menu(message)
        else:
            genre_movies = self.movies[self.movies['Genres'].apply(lambda x: genre in eval(x))]
            if genre_movies.empty:
                self.bot.send_message(message.chat.id, '–§–∏–ª—å–º—ã —ç—Ç–æ–≥–æ –∂–∞–Ω—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.')
            else:
                movie = genre_movies.sample(1).iloc[0]
                self.show_movie_details(message, movie)

    def show_main_menu(self, message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton('–ò—Å–∫–∞—Ç—å —Ñ–∏–ª—å–º üçø')
        button2 = types.KeyboardButton('–¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∂–∞–Ω—Ä—É üé•')
        button3 = types.KeyboardButton('–¢–æ–ø —Ñ–∏–ª—å–º—ã –∑–∞ –≥–æ–¥ üî•')
        button4 = types.KeyboardButton('–¢–æ–ø —Ñ–∏–ª—å–º—ã —Ä–µ–∂–∏—Å—Å–µ—Ä–∞ üé¨')
        button5 = types.KeyboardButton('–¢–æ–ø —Ñ–∏–ª—å–º—ã –∞–∫—Ç—ë—Ä–∞ üåü')
        button6 = types.KeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º üé≤')
        button7 = types.KeyboardButton('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –∂–∞–Ω—Ä—É üí°')

        markup.row(button1)
        markup.row(button2, button3)
        markup.row(button4, button5)
        markup.row(button6, button7)

        self.bot.send_message(message.chat.id,
                              '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                              reply_markup=markup)

    def on_click(self, message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.

        :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegram
        :type message: telebot.types.Message
        """
        try:
            if message.text == '–ò—Å–∫–∞—Ç—å —Ñ–∏–ª—å–º üçø':
                msg = self.bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞:')
                self.bot.register_next_step_handler(msg, self.search_movie)
            elif message.text == '–¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∂–∞–Ω—Ä—É üé•':
                genres = self.movies['Genres'].apply(eval).explode().unique()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                for genre in genres:
                    markup.add(types.KeyboardButton(genre))
                msg = self.bot.send_message(message.chat.id,
                                            '–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä:',
                                            reply_markup=markup)
                self.bot.register_next_step_handler(msg, self.select_genre)
            elif message.text == '–¢–æ–ø —Ñ–∏–ª—å–º—ã –∑–∞ –≥–æ–¥ üî•':
                msg = self.bot.send_message(message.chat.id,
                                            '–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤—ã—Ö–æ–¥–∞ —Ñ–∏–ª—å–º–æ–≤:')
                self.bot.register_next_step_handler(msg, self.get_year)
            elif message.text == '–¢–æ–ø —Ñ–∏–ª—å–º—ã —Ä–µ–∂–∏—Å—Å–µ—Ä–∞ üé¨':
                msg = self.bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ä–µ–∂–∏—Å—Å—ë—Ä–∞:')
                self.bot.register_next_step_handler(msg, self.get_director)
            elif message.text == '–¢–æ–ø —Ñ–∏–ª—å–º—ã –∞–∫—Ç—ë—Ä–∞ üåü':
                msg = self.bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–∫—Ç—ë—Ä–∞:')
                self.bot.register_next_step_handler(msg, self.get_actor)
            elif message.text == '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º üé≤':
                self.send_random_movie(message)
            elif message.text == '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –∂–∞–Ω—Ä—É üí°':
                genres = self.movies['Genres'].apply(eval).explode().unique()
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                for genre in genres:
                    markup.add(types.KeyboardButton(genre))
                msg = self.bot.send_message(message.chat.id,
                                            '–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:',
                                            reply_markup=markup)
                self.bot.register_next_step_handler(msg, self.recommend_by_genre)
            else:
                self.bot.send_message(message.chat.id,
                                      '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ üëÅÔ∏èüëÑüëÅÔ∏è')
                self.show_main_menu(message)
        except Exception as e:
            self.bot.send_message(message.chat.id, f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}')
            self.show_main_menu(message)

    def get_year(self, message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –≥–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø —Ñ–∏–ª—å–º–æ–≤ –∑–∞ —ç—Ç–æ—Ç –≥–æ–¥.

        :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º –≥–æ–¥–æ–º
        :type message: telebot.types.Message
        """
        try:
            year = int(message.text)
            self.top_movies_by_year(message, year)
        except ValueError:
            self.bot.send_message(message.chat.id,
                                  '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2020).')
            self.show_main_menu(message)

    def get_director(self, message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏ —Ä–µ–∂–∏—Å—Å–µ—Ä–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø –µ–≥–æ —Ñ–∏–ª—å–º–æ–≤.

        :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º —Ä–µ–∂–∏—Å—Å–µ—Ä–∞
        :type message: telebot.types.Message
        """
        director = message.text
        if len(director) < 2:
            self.bot.send_message(message.chat.id,
                                  '–ò–º—è —Ä–µ–∂–∏—Å—Å–µ—Ä–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞.')
            self.show_main_menu(message)
        else:
            self.top_movies_by_director(message, director)

    def get_actor(self, message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏ –∞–∫—Ç–µ—Ä–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø —Ñ–∏–ª—å–º–æ–≤ —Å –µ–≥–æ —É—á–∞—Å—Ç–∏–µ–º.

        :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º –∞–∫—Ç–µ—Ä–∞
        :type message: telebot.types.Message
        """
        actor = message.text
        if len(actor) < 2:
            self.bot.send_message(message.chat.id,
                                  '–ò–º—è –∞–∫—Ç–µ—Ä–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞.')
            self.show_main_menu(message)
        else:
            self.top_movies_by_actor(message, actor)

    def search_movie(self, message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é.

        :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ñ–∏–ª—å–º–∞
        :type message: telebot.types.Message
        """
        movie_name = message.text.strip()
        if len(movie_name) < 2:
            self.bot.send_message(message.chat.id,
                                  '–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞.')
            self.show_main_menu(message)
            return

        found_movies = self.movies[
            self.movies['NameFilm'].str.contains(movie_name, case=False, na=False)
        ]

        if found_movies.empty:
            msg = self.bot.send_message(message.chat.id,
                                        '–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:')
            self.bot.register_next_step_handler(msg, self.search_movie)
        else:
            movie = found_movies.iloc[0]
            self.show_movie_details(message, movie)

    def select_genre(self, message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∂–∞–Ω—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

        :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –∂–∞–Ω—Ä–æ–º
        :type message: telebot.types.Message
        """
        genre = message.text
        if genre not in self.movies['Genres'].apply(eval).explode().unique():
            self.bot.send_message(message.chat.id,
                                  '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.')
            self.show_main_menu(message)
        else:
            self.top_movies_by_genre(message, genre)

    def top_movies_by_genre(self, message, genre):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 10 —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∂–∞–Ω—Ä—É.

        :param message: –û–±—ä–µ–∫—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        :type message: telebot.types.Message
        :param genre: –í—ã–±—Ä–∞–Ω–Ω—ã–π –∂–∞–Ω—Ä
        :type genre: str
        """
        try:
            genre_movies = self.movies[
                self.movies['Genres'].apply(lambda x: genre in eval(x))
            ]
            top_movies = genre_movies.nlargest(10, 'ratingKP')

            if top_movies.empty:
                self.bot.send_message(message.chat.id,
                                      f'–§–∏–ª—å–º—ã –∂–∞–Ω—Ä–∞ "{genre}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.')
            else:
                self.send_top_movies(message, top_movies, f'–∂–∞–Ω—Ä—É "{genre}"')

            self.show_main_menu(message)
        except Exception as e:
            self.bot.send_message(message.chat.id,
                                  f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ –∂–∞–Ω—Ä—É: {e}')
            self.show_main_menu(message)

    def top_movies_by_year(self, message, year):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 10 —Ñ–∏–ª—å–º–æ–≤ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≥–æ–¥.

        :param message: –û–±—ä–µ–∫—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        :type message: telebot.types.Message
        :param year: –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
        :type year: int
        """
        try:
            current_year = pd.Timestamp.now().year
            if year < 1900 or year > current_year:
                self.bot.send_message(message.chat.id,
                                      f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –º–µ–∂–¥—É 1900 –∏ {current_year}.')
                self.show_main_menu(message)
                return

            year_movies = self.movies[self.movies['Year'] == year]
            top_movies = year_movies.nlargest(10, 'ratingKP')

            if top_movies.empty:
                self.bot.send_message(message.chat.id,
                                      f'–§–∏–ª—å–º—ã –∑–∞ {year} –≥–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.')
            else:
                self.send_top_movies(message, top_movies, f'{year} –≥–æ–¥—É')

            self.show_main_menu(message)
        except Exception as e:
            self.bot.send_message(message.chat.id,
                                  f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ –≥–æ–¥—É: {e}')
            self.show_main_menu(message)

    def top_movies_by_director(self, message, director):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 10 —Ñ–∏–ª—å–º–æ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏—Å—Å–µ—Ä–∞.

        :param message: –û–±—ä–µ–∫—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        :type message: telebot.types.Message
        :param director: –ò–º—è —Ä–µ–∂–∏—Å—Å–µ—Ä–∞
        :type director: str
        """
        try:
            director_movies = self.movies[
                self.movies['Directors'].str.contains(director, case=False, na=False)
            ]
            top_movies = director_movies.nlargest(10, 'ratingKP')

            if top_movies.empty:
                self.bot.send_message(message.chat.id,
                                      f'–§–∏–ª—å–º—ã —Ä–µ–∂–∏—Å—Å–µ—Ä–∞ {director} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.')
            else:
                self.send_top_movies(message, top_movies, f'—Ä–µ–∂–∏—Å—Å–µ—Ä—É {director}')

            self.show_main_menu(message)
        except Exception as e:
            self.bot.send_message(message.chat.id,
                                  f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ —Ä–µ–∂–∏—Å—Å–µ—Ä—É: {e}')
            self.show_main_menu(message)

    def top_movies_by_actor(self, message, actor):
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 10 —Ñ–∏–ª—å–º–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∞–∫—Ç–µ—Ä–æ–º.

        :param message: –û–±—ä–µ–∫—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        :type message: telebot.types.Message
        :param actor: –ò–º—è –∞–∫—Ç–µ—Ä–∞
        :type actor: str
        """
        try:
            actor_movies = self.movies[
                self.movies['Actors'].str.contains(actor, case=False, na=False)
            ]
            top_movies = actor_movies.nlargest(10, 'ratingKP')

            if top_movies.empty:
                self.bot.send_message(message.chat.id,
                                      f'–§–∏–ª—å–º—ã —Å –∞–∫—Ç–µ—Ä–æ–º {actor} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.')
            else:
                self.send_top_movies(message, top_movies, f'–∞–∫—Ç–µ—Ä—É {actor}')

            self.show_main_menu(message)
        except Exception as e:
            self.bot.send_message(message.chat.id,
                                  f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ –∞–∫—Ç–µ—Ä—É: {e}')
            self.show_main_menu(message)

    def send_top_movies(self, message, top_movies, category):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ —Ç–æ–ø —Ñ–∏–ª—å–º–æ–≤ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.

        :param message: –û–±—ä–µ–∫—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        :type message: telebot.types.Message
        :param top_movies: DataFrame —Å —Ñ–∏–ª—å–º–∞–º–∏
        :type top_movies: pd.DataFrame
        :param category: –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞ (–¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞)
        :type category: str
        """
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            movie_list = '\n'.join([
                f"{i + 1}. {row['NameFilm']} ({int(row['Year'])}), ‚òÖ {row['ratingKP']:.1f}"
                for i, (_, row) in enumerate(top_movies.iterrows())
            ])

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º
            self.bot.send_message(
                message.chat.id,
                f"üèÜ –¢–æ–ø —Ñ–∏–ª—å–º–æ–≤ –ø–æ {category}:\n\n{movie_list}",
                parse_mode='Markdown'
            )

            # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
            markup = types.InlineKeyboardMarkup()
            for _, row in top_movies.iterrows():
                btn_text = f"{row['NameFilm']} ({int(row['Year'])})"
                markup.add(types.InlineKeyboardButton(
                    btn_text,
                    callback_data=f"movie_{row['KPid']}"
                ))

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            self.bot.send_message(
                message.chat.id,
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å–º –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:",
                reply_markup=markup
            )

        except Exception as e:
            self.bot.send_message(
                message.chat.id,
                '‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤.'
            )
            self.show_main_menu(message)

    def show_movie_details(self, message, movie):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–µ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏.

        :param message: –û–±—ä–µ–∫—Ç –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :type message: telebot.types.Message
        :param movie: –î–∞–Ω–Ω—ã–µ –æ —Ñ–∏–ª—å–º–µ (—Å—Ç—Ä–æ–∫–∞ DataFrame)
        :type movie: pandas.Series

        :raises KeyError: –ï—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–∞
        :raises Exception: –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ –º–µ–¥–∏–∞

        .. note::
            –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ –¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–∞:
            - NameFilm: –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞
            - Year: –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞
            - ratingKP: –†–µ–π—Ç–∏–Ω–≥ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞
            - Description: –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞
            - PosterUrl: URL –ø–æ—Å—Ç–µ—Ä–∞
            - WebUrl: URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            - WebUrl2: URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ
        """

        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            msg_text = f"üé¨ *{movie['NameFilm']}* ({int(movie['Year'])})\n\n"
            msg_text += f"üìù *–û–ø–∏—Å–∞–Ω–∏–µ:*\n{movie['Description']}\n\n"
            msg_text += f"üìä *–†–µ–π—Ç–∏–Ω–≥ –ö–ü:* {movie['ratingKP']:.1f}\n"
            msg_text += f"‚≠ê *IMDb:* {movie['ratingImdb']:.1f}\n"

            if pd.notna(movie.get('filmLength')):
                msg_text += f"‚è≥ *–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:* {movie['filmLength']} –º–∏–Ω.\n"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            self.bot.send_message(message.chat.id, msg_text, parse_mode='Markdown')

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–µ—Ä–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
            if pd.notna(movie.get('PosterUrl')):
                try:
                    self.bot.send_photo(message.chat.id, movie['PosterUrl'])
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å—Ç–µ—Ä–∞: {e}")
                    self.bot.send_message(message.chat.id, "üñº –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")

            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
            markup = types.InlineKeyboardMarkup()
            if pd.notna(movie.get('WebUrl')):
                markup.add(types.InlineKeyboardButton(
                    'üé• –°–º–æ—Ç—Ä–µ—Ç—å –æ–Ω–ª–∞–π–Ω',
                    url=movie['WebUrl']
                ))

            if pd.notna(movie.get('WebUrl2')):
                markup.add(types.InlineKeyboardButton(
                    'üìå –ö–∏–Ω–æ–ü–æ–∏—Å–∫',
                    url=movie['WebUrl2']
                ))

            if markup.keyboard:
                self.bot.send_message(
                    message.chat.id,
                    "üîó –°—Å—ã–ª–∫–∏:",
                    reply_markup=markup
                )

        except KeyError as e:
            error_msg = f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: {str(e)}"
            self.bot.send_message(message.chat.id, error_msg)
            print(f"[ERROR] {error_msg}\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è: {list(movie.keys())}")

        except Exception as e:
            self.bot.send_message(
                message.chat.id,
                "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∏–ª—å–º–µ"
            )
            print(f"[ERROR] show_movie_details: {str(e)}")

        finally:
            self.show_main_menu(message)

    def handle_movie_callback(self, call):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback –æ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å–º–∞.

        :param call: –û–±—ä–µ–∫—Ç callback
        :type call: telebot.types.CallbackQuery
        """
        try:
            movie_id = int(call.data.split('_')[1])
            movie = self.movies[self.movies['KPid'] == movie_id].iloc[0]
            self.show_movie_details(call.message, movie)
        except IndexError:
            self.bot.send_message(
                call.message.chat.id,
                '‚ö†Ô∏è –§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.'
            )
            self.show_main_menu(call.message)
        except Exception as e:
            self.bot.send_message(
                call.message.chat.id,
                '‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∏–ª—å–º–∞.'
            )
            self.show_main_menu(call.message)


def run_bot(token: str):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º.

    :param token: API-—Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
    :type token: str
    """
    keep_alive()  # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ñ–æ–Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
    movie_bot = MovieBot(token)

    # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
    while True:
        try:
            movie_bot.bot.polling(none_stop=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
    BOT_TOKEN = 'token'
    run_bot(BOT_TOKEN)
